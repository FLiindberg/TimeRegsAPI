// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeRegApi.Data;

#nullable disable

namespace TimeRegApi.Migrations
{
    [DbContext(typeof(TRDbContext))]
    [Migration("20220323093559_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TimeRegApi.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            Email = "Test@test.se",
                            FirstName = "Filip",
                            LastName = "Lindberg",
                            Password = "112233",
                            PhoneNumber = 112
                        },
                        new
                        {
                            EmployeeId = 2,
                            Email = "Test2@test.se",
                            FirstName = "Andre",
                            LastName = "Lindqvist",
                            Password = "332211",
                            PhoneNumber = 112
                        });
                });

            modelBuilder.Entity("TimeRegApi.Model.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<bool>("Aktiv")
                        .HasColumnType("bit");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("GitHub")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Aktiv = true,
                            Company = "Aveer",
                            Deadline = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GitHub = "Länk",
                            ProjectName = "Test"
                        },
                        new
                        {
                            ProjectId = 2,
                            Aktiv = false,
                            Company = "Aveer",
                            Deadline = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GitHub = "Länk 2",
                            ProjectName = "Testing"
                        });
                });

            modelBuilder.Entity("TimeRegApi.Model.TimeReport", b =>
                {
                    b.Property<int>("TimeReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TimeReportId"), 1L, 1);

                    b.Property<int>("AfterHours")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EducationHours")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.Property<int>("PreperationHours")
                        .HasColumnType("int");

                    b.HasKey("TimeReportId");

                    b.ToTable("TimeReports");

                    b.HasData(
                        new
                        {
                            TimeReportId = 1,
                            AfterHours = 2,
                            Comment = "Testing",
                            EducationHours = 0,
                            Other = 0,
                            PreperationHours = 0
                        },
                        new
                        {
                            TimeReportId = 2,
                            AfterHours = 0,
                            Comment = "Testing2",
                            EducationHours = 0,
                            Other = 0,
                            PreperationHours = 5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
